{% macro node_llm_config_to_dspy_lm(llm_config) %}
{% set llm_params = llm_config.litellm_params or {"model": llm_config.model} %}
{% if "azure/" in (llm_params["model"] or "") %}
{% set _ = llm_params.update({"api_version": os.environ["AZURE_API_VERSION"]}) %}
{% endif %}
{% set _ = llm_params.update({"drop_params": True, "model_type": "chat"}) %}
dspy.LM(
            max_tokens={{ llm_config.max_tokens or 2048 }},
            temperature={{ llm_config.temperature or 0 }},
            {% for key, value in llm_params.items() %}
            {{ key }}={{ value.__repr__() }},
            {% endfor %}
        )
{% endmacro %}

{% macro edge_param(edge, source_parts, target_parts) %}
{% if source_parts[0] == "outputs" %}
    {% if edge.source == "entry" %}
{{ target_parts[1] }}=inputs["{{ source_parts[1] }}"],
    {% else %}
{{ target_parts[1] }}={{ edge.source }}.{{ source_parts[1] }},
    {% endif %}
{% endif %}
{% endmacro %}

{% macro evaluator_instance(workflow, node) %}
{% if not node.data.cls %}
{{ raise("Evaluator class not specified for " ~ node.data.name) }}
{% endif %}
{% if node.data.cls == "LangWatchEvaluator" %}
{% if not node.data.evaluator %}
{{ raise("Evaluator not specified for LangWatchEvaluator") }}
{% endif %}
{{ EVALUATORS[node.data.cls]["class"] }}(
    api_key="{{ workflow.api_key }}",
    evaluator="{{ node.data.evaluator }}",
    name="{{ node.data.name or 'LangWatchEvaluator' }}",
    {% if node.data.parameters %}
    settings={{ parse_fields(node.data.parameters or [], autoparse=False) }}
    {% endif %}
)
{% elif node.data.parameters %}
{{ EVALUATORS[node.data.cls]["class"] }}(
    **{{ parse_fields(node.data.parameters or [], autoparse=False) }}
)
{% else %}
{{ EVALUATORS[node.data.cls]["class"] }}()
{% endif %}
{% endmacro %}